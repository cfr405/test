1、a.无意义标签
        div，span 主要用来布局
     b.一级标签
        body  一个页面中只有一个
     c.二级标签
        div，span......
     d.三级标签
        p

2、布尔属性的样式 
   reversed  反转      open 打开
   checked  默认选中，用于单选或者多选
   disabled  禁止选中状态
   readonly 只读
   multiple  是否可以多选
   selected  默认选中下拉框中的某个值
   autofocus  默认提醒   自动聚焦
   required  必须输入不能为空
   controls  显示控制条
   autoplay  自动播放
   loop  循环
  
  display常见属性值
  inline      行内
  block     块级
  inline-block    块级行内  (vertical-align)
  none      隐藏
  flex        弹性盒容器

3、注释的作用
      代码更具可读性，便于维护

4、CSS优先级
      行内样式 > 外部样式 = 内嵌式 （就近原则）
   级联:给同一个元素设置了不同样式的时候，最终采取什么样式的解决方案
   判断的三种方法：
    1)是否使用!important修饰  最优先
    2)判断特性值
      style属性内                              1000
      id选择器                                 100
      class选择器，伪类选择器，属性选择器      10
      标签选择器， 伪元素选择器                1
      其他                                     0
      选择器特性值越高越优先
    3)就近优先原则  都没有!important修饰，且特性值相同的情况下，后边的覆盖前边的，靠近html的优先
5、外边距合并问题
     1）父子级
               给父级加边框属性
               给父级加padding
               给父级元素添加overflow：hidden;
               给子级或父级一方添加浮动
               给子级或父级一方添加绝对定位
               给子级或父级一方添加display:inline-block;
               
     2) 兄弟级
               垂直方向，外边距如果都是正数，则不会叠加而是会合并，且会取最大的值
               垂直方向，外边距如果有一个为负数，则会进行叠加。
               垂直方向，外边距如果都是负数，则不会叠加而是会合并，且会取绝对值较大的值
6、显示与隐藏
   display：none/block  隐藏的时候空间也会进行隐藏
   visibility：visible/hidden   隐藏的时候原来所占据的空间依然占据
  opacity：  透明度 值越小，透明度越高
7、元素的水平居中
     1）、行内元素的水平居中：text-align
     2）、块级元素的水平居中：margin：0 auto
   元素的垂直居中
     1）、行内元素：line-height设置为与父级元素的高度一样大
     2）、块级元素：可以给父级使用相对定位，子级使用绝对定位，将top、left、right、bottom为0
     3）、给父级和子级都加绝对定位，再给子级添加top：calc（50% - 子级元素高度一半）
                                           left：calc（50% - 子级元素宽度一半）
     4）、给父级相对定位，子级绝对定位：left：50%；top：50%；
                                  margin-left：-子级元素宽度一半；margin-top：-子级元素高度一半
     5）、给父级一个display：flex； align-items：center；再给子级添加：margin：0 auto；
   盒子的水平居中
    盒子居中方式1
      1)  盒子具备绝对宽度 
      2)  margin:0 auto
    盒子居中方式2
      1)  盒子具备绝对宽度 
      2)  margin-left=(父级宽度-盒子的宽度)/2

 8、盒子模型
    盒模型由外而内包括：边距（margin、padding）、边框（border）、填充（padding）、内容（content）
    盒子模型：
              a、box-sizing:content-box；（标准盒子模型/w3c盒子）width和height是指元素中内容的宽高
              b、box-sizing:border-box；（IE盒子模型）width和height是指元素的宽高
    w3c盒子 内容区宽高:设置的宽高
            盒子宽高:内容区宽高+padding区宽高+border区宽高
            占据屏幕（视口区）宽高:内容区宽高+padding区宽高+border区宽高+margin区宽高
    IE盒子  内容区宽高:设置的宽高-border区宽高-padding区宽高
            盒子宽高：设置的宽高
            所占屏幕（视口区）宽高：设置的宽高+margin区宽高

 9、行内元素和块状元素的区别？
    行内元素：div,h1~h6,p,ul,ol,dl,form,table
              与其他元素共享一行，不能包含块级元素，设置width无效，height无效（可以设置line-height），
              margin上下无效，padding上下无效
    块级元素：span,a,s,i,b,strong
              独占一行，可设置宽高
   行内元素与块级元素转换方法
      display:inline;  行内显示，宽高无效
      display:block;   块级显示 可设置宽高
      display:inline-block;  行内显示，可设置宽高
 10、清除浮动的方法
    1）、使用额外的标签clear:both
          在浮动元素下面添加一个空标签，在这个标签中设置clear：both；
    2）、使用overflow：hidden属性
          父元素定义overflow:hidden，此时，浏览器会自动检查浮动区域的高度；
    3）、使用伪元素:after清除浮动
          .parent:after{
          // 定义元素前后的生成内容，这里是定义元素后的空内容
          content: '';
          display: block;
          clear: both;
          }
          在元素最后定义一个空的内容，然后让该空的内容来清除浮动；


 11、实现动画需要的属性
    animation                    速写属性
    animation-name               动画名字
    animation-duration           动画持续时间                      
    animation-iteration-count    动画执行次数
        属性值infinite                     无数次
    animation-delay              动画延迟
    animation-direction          动画方向
        属性值 reverse                     播放帧的顺序反转
               alternate                   播放帧的顺序交替反转
               alternate-reverse           播放帧的顺序交替反转，不过第一次播放的时候就反转     
    animation-play-state         动画播放状态
        属性值 running                     运行状态
               paused                      暂停状态
    animation-fill-mode          动画填充模式
    animation-timing-function    动画速度曲线
        属性值 ease                        默认值
               ease-in                     先慢后快
               ease-out                    先快后慢
               ease-in-out                 先慢后快再慢
               linear                      线性增长
    transition                   过渡属性
